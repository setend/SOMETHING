#include <iostream>
#include <vector>
#include <queue>

using namespace std;
int main(){
    int n,m;
    while(cin>>n>>m){
        vector<vector<bool>> mp(n,vector<bool>(m,true));  // map of dungeon
        int sx,sy,k,cnt=0; // start point x,y, count;
        for(int i=0;i<n;++i)  //init
            for(int j=0;j<m;++j){
                char c;
                cin>>c;
                if(c=='.') {mp[i][j]=false;++cnt;}
            }
        cin>>sx>>sy>>k;
        vector<vector<int>> dire(k,vector<int>(2));//direction
        for(int i=0;i<k;++i)
            cin>>dire[i][0]>>dire[i][1];
        queue<pair<int,int>> que;
        que.push({sx,sy});
        int t=0,mx=0;
        mp[sx][sy]=true;
        while(!que.empty()){
            int sz=que.size();
            for(int i=0;i<sz;++i){
                ++t;
                auto p=que.front();que.pop();
                for(int i=0;i<k;++i){
                    int mvx=p.first+dire[i][0];
                    int mvy=p.second+dire[i][1];
                    if(mvx<0||mvy<0||mvx>=n||mvy>=m||mp[mvx][mvy]) continue;
                    mp[mvx][mvy]=true;
                    que.push({mvx,mvy});
                }
            }
            ++mx;
        }
        --mx;
        if(cnt!=t) mx=-1;
        cout<<mx<<endl;
            
        
    }
}
