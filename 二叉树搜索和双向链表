//输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。
/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    TreeNode* Convert(TreeNode* pR)
    {
        stack<TreeNode*> st;
        while(pR){
            st.push(pR);
            pR=pR->left;
        }
        TreeNode* head=st.top();
        while(!st.empty()){
            auto t=st.top();
            st.pop();
            if(t->right){
                auto t2=t->right;
                while(t2){
                    st.push(t2);
                    t2=t2->left;
                }
            }
            if(!st.empty()){
                t->right=st.top();
                st.top()->left=t;
            }
        }
        return head;
    }
};
